on: [push]
jobs:
    test:
        name: Go Source Tests
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        -
            name: "Setup Go"
            uses: actions/setup-go@v5
            with:
                go-version: '1.23.x'
        # -
        #     name: Install dependencies
        #     run: go get .
        - 
            name: Test with the Go CLI
            run: go test ./...
        
    build-push:
        runs-on: ubuntu-latest
        needs: test
        steps:
        -
            name: Login to GitHub Container Registry
            uses: docker/login-action@v3
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
        -
            name: Build and push to ghcr
            uses: docker/build-push-action@v6
            with:
                push: true
                tags: ghcr.io/muskit/hoyocodes:latest
    
    deploy:
        name: Deploy to VPS via SSH (runs docker-compose in ~/HoyoCodes-Discord-Bot/)
        runs-on: ubuntu-latest
        needs: build-push
        steps:
        -
            name: Execute remote SSH commands
            uses: appleboy/ssh-action@v1
            with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                    ## container image doesn't have docker compose ##
                    docker-compose() {
                        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "$PWD:$PWD" -w="$PWD" docker/compose:1.27.4 $@
                    }
                
                    cd ~/HoyoCodes-Discord-Bot
                    docker-compose down

                    docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
                    docker pull ghcr.io/muskit/hoyocodes:latest
                    docker logout ghcr.io

                    docker-compose up -d
                    docker image prune -af